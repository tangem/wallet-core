#!/bin/bash

set -o pipefail
set -e

# load release library code
base_dir=$(dirname $0)
source ${base_dir}/library

# version to release
version=$(wc_read_version $1)
echo "release version ${version}"

release_url=$(wc_release_url ${version})
echo "release_url url is $release_url"

pushd ${base_dir}/../swift/build

# archive xcframeworks
core_zip_filename="WalletCore.xcframework.zip"
core_dsyms_filename="WalletCore.xcframework.dSYM.zip"
protobuf_zip_filename="SwiftProtobuf.xcframework.zip"
protobuf_dsyms_filename="SwiftProtobuf.xcframework.dSYM.zip"

rm -rf ${core_zip_filename} ${core_dsyms_filename} ${protobuf_zip_filename} ${protobuf_dsyms_filename}

zip -r ${core_dsyms_filename} WalletCore.dSYMs

zip -r ${core_zip_filename} WalletCore.xcframework
core_hash=$(/usr/bin/shasum -a 256 ${core_zip_filename} | awk '{printf $1}')

zip -r ${protobuf_dsyms_filename} SwiftProtobuf.dSYMs

zip -r ${protobuf_zip_filename} SwiftProtobuf.xcframework
protobuf_hash=$(/usr/bin/shasum -a 256 ${protobuf_zip_filename} | awk '{printf $1}')

# create Hashsums.txt

hashsums="Hashsums.txt"
cat > $hashsums <<EOF
WalletCore: ${core_hash}

SwiftProtobuf: ${protobuf_hash}
EOF

# upload to release
core_download_url=$(wc_upload_asset ${release_url} ${core_zip_filename})
echo "wallet core url is: ${core_download_url}"

protobuf_download_url=$(wc_upload_asset ${release_url} ${protobuf_zip_filename})
echo "swift protobuf url is: ${protobuf_download_url}"

protobuf_dsyms_url=$(wc_upload_asset ${release_url} ${protobuf_dsyms_filename})
echo "protobuf dsyms url is: ${protobuf_dsyms_url}"

core_dsyms_url=$(wc_upload_asset ${release_url} ${core_dsyms_filename})
echo "core dsyms url is: ${core_dsyms_url}"

hashsums_download_url=$(wc_upload_asset ${release_url} ${hashsums})
echo "${hashsums} url is: ${hashsums_download_url}"

popd
